//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан по шаблону.
//
//     Изменения, вносимые в этот файл вручную, могут привести к непредвиденной работе приложения.
//     Изменения, вносимые в этот файл вручную, будут перезаписаны при повторном создании кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Gamma.Models
{
    using System;
    using System.Collections.Generic;
    
    public partial class C1CNomenclature
    {
        public C1CNomenclature()
        {
            this.C1CCharacteristics = new HashSet<C1CCharacteristics>();
            this.C1CMeasureUnits = new HashSet<C1CMeasureUnits>();
            this.C1CNomenclature1 = new HashSet<C1CNomenclature>();
            this.C1CNomenclatureProperties = new HashSet<C1CNomenclatureProperties>();
            this.C1CSpecificationInputNomenclature = new HashSet<C1CSpecificationInputNomenclature>();
            this.C1CSpecificationOutputNomenclature = new HashSet<C1CSpecificationOutputNomenclature>();
            this.DocWithdrawalMaterials = new HashSet<DocWithdrawalMaterials>();
            this.ProductGroupPacks = new HashSet<ProductGroupPacks>();
            this.ProductionTasks = new HashSet<ProductionTasks>();
            this.ProductPalletItems = new HashSet<ProductPalletItems>();
            this.ProductSpools = new HashSet<ProductSpools>();
            this.PlaceGroups = new HashSet<PlaceGroups>();
        }
    
        public System.Guid C1CNomenclatureID { get; set; }
        public Nullable<byte> NomenclatureKindID { get; set; }
        public Nullable<System.Guid> C1CBaseMeasureUnitQualifier { get; set; }
        public string C1CCode { get; set; }
        public Nullable<System.Guid> C1CParentID { get; set; }
        public string Name { get; set; }
        public Nullable<bool> IsArchive { get; set; }
        public bool IsFolder { get; set; }
    
        public virtual ICollection<C1CCharacteristics> C1CCharacteristics { get; set; }
        public virtual C1CMeasureUnitQualifiers C1CMeasureUnitQualifiers { get; set; }
        public virtual ICollection<C1CMeasureUnits> C1CMeasureUnits { get; set; }
        public virtual ICollection<C1CNomenclature> C1CNomenclature1 { get; set; }
        public virtual C1CNomenclature C1CNomenclature2 { get; set; }
        public virtual ICollection<C1CNomenclatureProperties> C1CNomenclatureProperties { get; set; }
        public virtual ICollection<C1CSpecificationInputNomenclature> C1CSpecificationInputNomenclature { get; set; }
        public virtual ICollection<C1CSpecificationOutputNomenclature> C1CSpecificationOutputNomenclature { get; set; }
        public virtual ICollection<DocWithdrawalMaterials> DocWithdrawalMaterials { get; set; }
        public virtual ICollection<ProductGroupPacks> ProductGroupPacks { get; set; }
        public virtual ICollection<ProductionTasks> ProductionTasks { get; set; }
        public virtual ICollection<ProductPalletItems> ProductPalletItems { get; set; }
        public virtual ICollection<ProductSpools> ProductSpools { get; set; }
        public virtual ICollection<PlaceGroups> PlaceGroups { get; set; }
    }
}
